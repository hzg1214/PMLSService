<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.eju.deal.otherReport.dao.LnkYjQtNyMapper">
  <resultMap id="BaseResultMap" type="cn.com.eju.deal.otherReport.model.LnkYjQtNy">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="reportId" jdbcType="NVARCHAR" property="reportId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="postAmount" jdbcType="DECIMAL" property="postAmount" />
    <result column="totalAmount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="recordDate" jdbcType="TIMESTAMP" property="recordDate" />
    <result column="delFlg" jdbcType="BIT" property="delFlg" />
    <result column="crtDt" jdbcType="TIMESTAMP" property="crtDt" />
    <result column="crtEmpId" jdbcType="INTEGER" property="crtEmpId" />
    <result column="uptEmpId" jdbcType="INTEGER" property="uptEmpId" />
    <result column="uptDt" jdbcType="TIMESTAMP" property="uptDt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, reportId, num, postAmount, totalAmount, recordDate, delFlg, crtDt, crtEmpId, 
    uptEmpId, uptDt
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LNK_YJ_QT_NY
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from LNK_YJ_QT_NY
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.eju.deal.otherReport.model.LnkYjQtNy">
    insert into LNK_YJ_QT_NY (id, reportId, num, 
      postAmount, totalAmount, recordDate, 
      delFlg, crtDt, crtEmpId, 
      uptEmpId, uptDt)
    values (#{id,jdbcType=INTEGER}, #{reportId,jdbcType=NVARCHAR}, #{num,jdbcType=INTEGER}, 
      #{postAmount,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{recordDate,jdbcType=TIMESTAMP}, 
      #{delFlg,jdbcType=BIT}, #{crtDt,jdbcType=TIMESTAMP}, #{crtEmpId,jdbcType=INTEGER}, 
      #{uptEmpId,jdbcType=INTEGER}, #{uptDt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.eju.deal.otherReport.model.LnkYjQtNy">
    insert into LNK_YJ_QT_NY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="reportId != null">
        reportId,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="postAmount != null">
        postAmount,
      </if>
      <if test="totalAmount != null">
        totalAmount,
      </if>
      <if test="recordDate != null">
        recordDate,
      </if>
      <if test="delFlg != null">
        delFlg,
      </if>
      <if test="crtDt != null">
        crtDt,
      </if>
      <if test="crtEmpId != null">
        crtEmpId,
      </if>
      <if test="uptEmpId != null">
        uptEmpId,
      </if>
      <if test="uptDt != null">
        uptDt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="reportId != null">
        #{reportId,jdbcType=NVARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="postAmount != null">
        #{postAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="recordDate != null">
        #{recordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlg != null">
        #{delFlg,jdbcType=BIT},
      </if>
      <if test="crtDt != null">
        #{crtDt,jdbcType=TIMESTAMP},
      </if>
      <if test="crtEmpId != null">
        #{crtEmpId,jdbcType=INTEGER},
      </if>
      <if test="uptEmpId != null">
        #{uptEmpId,jdbcType=INTEGER},
      </if>
      <if test="uptDt != null">
        #{uptDt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.eju.deal.otherReport.model.LnkYjQtNy">
    update LNK_YJ_QT_NY
    <set>
      <if test="reportId != null">
        reportId = #{reportId,jdbcType=NVARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="postAmount != null">
        postAmount = #{postAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        totalAmount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="recordDate != null">
        recordDate = #{recordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlg != null">
        delFlg = #{delFlg,jdbcType=BIT},
      </if>
      <if test="crtDt != null">
        crtDt = #{crtDt,jdbcType=TIMESTAMP},
      </if>
      <if test="crtEmpId != null">
        crtEmpId = #{crtEmpId,jdbcType=INTEGER},
      </if>
      <if test="uptEmpId != null">
        uptEmpId = #{uptEmpId,jdbcType=INTEGER},
      </if>
      <if test="uptDt != null">
        uptDt = #{uptDt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.eju.deal.otherReport.model.LnkYjQtNy">
    update LNK_YJ_QT_NY
    set reportId = #{reportId,jdbcType=NVARCHAR},
      num = #{num,jdbcType=INTEGER},
      postAmount = #{postAmount,jdbcType=DECIMAL},
      totalAmount = #{totalAmount,jdbcType=DECIMAL},
      recordDate = #{recordDate,jdbcType=TIMESTAMP},
      delFlg = #{delFlg,jdbcType=BIT},
      crtDt = #{crtDt,jdbcType=TIMESTAMP},
      crtEmpId = #{crtEmpId,jdbcType=INTEGER},
      uptEmpId = #{uptEmpId,jdbcType=INTEGER},
      uptDt = #{uptDt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getList" parameterType="Map" resultType="cn.com.eju.deal.otherReport.dto.LnkYjNyDto">
      SELECT * into #reportDetail from (
      SELECT  x1.Id,x1.reportNo,x1.businessDate,x1.srType,1 tsnum,x1.dealAmount
      FROM dbo.LNK_Qt_ReportDetail(NOLOCK) x1
      inner join dbo.LNK_Qt_Report(NOLOCK) report on x1.reportNo=report.reportNo
      INNER JOIN LNK_Estate(NOLOCK) Estate ON report.EstateId = Estate.EstateId AND Estate.DelFlg = 0
      WHERE x1.businessType = 27302
      AND x1.DelFlg =0
      AND Estate.CityNo = #{cityNo,jdbcType=VARCHAR}
      <if test="projectDepartmentId != null and projectDepartmentId != ''">
        AND Estate.projectDepartmentId = #{projectDepartmentId,jdbcType=VARCHAR}
      </if>
      <if test="estateNmKey != null and estateNmKey != ''">
        AND Estate.estateNm IN (${estateNmKey})
      </if>
      <if test="reportNo != null and reportNo != ''">
        <![CDATA[AND report.reportNo LIKE '%' + RTrim(LTrim('${reportNo}')) + '%']]>
      </if>
      UNION ALL
      SELECT x1.Id,x1.reportNo,x1.businessDate,x1.srType,-1 tsnum,-x1.dealAmount
      FROM dbo.LNK_Qt_ReportDetail(NOLOCK) x1
      inner join dbo.LNK_Qt_Report(NOLOCK) report on x1.reportNo=report.reportNo
      INNER JOIN LNK_Estate(NOLOCK) Estate ON report.EstateId = Estate.EstateId AND Estate.DelFlg = 0
      WHERE x1.businessType = 27303
      AND x1.DelFlg =0
      AND Estate.CityNo = #{cityNo,jdbcType=VARCHAR}
      <if test="projectDepartmentId != null and projectDepartmentId != ''">
        AND Estate.projectDepartmentId = #{projectDepartmentId,jdbcType=VARCHAR}
      </if>
      <if test="estateNmKey != null and estateNmKey != ''">
        AND Estate.estateNm IN (${estateNmKey})
      </if>
      <if test="reportNo != null and reportNo != ''">
        <![CDATA[AND report.reportNo LIKE '%' + RTrim(LTrim('${reportNo}')) + '%']]>
      </if>
      )tbl1

      SELECT * INTO #q from (
      SELECT
      t.reportId ,
      t.rowNo / 8 AS rowNo ,
      t.num,
      t.reportNo,
      SUM(CASE WHEN t.postAmount IS NOT NULL THEN t.postAmount ELSE 0 END) postAmountTotal ,
      SUM(CASE WHEN t.totalAmount IS NOT NULL THEN t.totalAmount ELSE 0 END) totalAmountTotal ,
      MAX(CASE t.rowNo % 7 WHEN 1 THEN t.postAmount ELSE NULL END) postAmount ,
      MAX(CASE t.rowNo % 7 WHEN 1 THEN t.totalAmount ELSE NULL END) totalAmount ,
      MAX(CASE t.rowNo % 7 WHEN 1 THEN CONVERT(VARCHAR(50), t.RecordDate, 23) ELSE NULL END) recordDate ,
      MAX(CASE t.rowNo % 7 WHEN 1 THEN switchFlag ELSE NULL END) switchFlag,
      MAX(CASE t.rowNo % 7 WHEN 2 THEN t.postAmount ELSE NULL END) postAmount1 ,
      MAX(CASE t.rowNo % 7 WHEN 2 THEN t.totalAmount ELSE NULL END) totalAmount1 ,
      MAX(CASE t.rowNo % 7 WHEN 2 THEN CONVERT(VARCHAR(50), t.RecordDate, 23) ELSE NULL END) recordDate1 ,
      MAX(CASE t.rowNo % 7 WHEN 2 THEN switchFlag ELSE NULL END) switchFlag1 ,
      MAX(CASE t.rowNo % 7 WHEN 3 THEN t.postAmount ELSE NULL END) postAmount2 ,
      MAX(CASE t.rowNo % 7 WHEN 3 THEN t.totalAmount ELSE NULL END) totalAmount2 ,
      MAX(CASE t.rowNo % 7 WHEN 3 THEN CONVERT(VARCHAR(50), t.RecordDate, 23) ELSE NULL END) recordDate2 ,
      MAX(CASE t.rowNo % 7 WHEN 3 THEN switchFlag ELSE NULL END) switchFlag2 ,
      MAX(CASE t.rowNo % 7 WHEN 4 THEN t.postAmount ELSE NULL END) postAmount3 ,
      MAX(CASE t.rowNo % 7 WHEN 4 THEN t.totalAmount ELSE NULL END) totalAmount3 ,
      MAX(CASE t.rowNo % 7 WHEN 4 THEN CONVERT(VARCHAR(50), t.RecordDate, 23) ELSE NULL END) recordDate3 ,
      MAX(CASE t.rowNo % 7 WHEN 4 THEN switchFlag ELSE NULL END) switchFlag3 ,
      MAX(CASE t.rowNo % 7 WHEN 5 THEN t.postAmount ELSE NULL END) postAmount4 ,
      MAX(CASE t.rowNo % 7 WHEN 5 THEN t.totalAmount ELSE NULL END) totalAmount4 ,
      MAX(CASE t.rowNo % 7 WHEN 5 THEN CONVERT(VARCHAR(50), t.RecordDate, 23) ELSE NULL END) recordDate4 ,
      MAX(CASE t.rowNo % 7 WHEN 5 THEN switchFlag ELSE NULL END) switchFlag4 ,
      MAX(CASE t.rowNo % 7 WHEN 6 THEN t.postAmount ELSE NULL END) postAmount5 ,
      MAX(CASE t.rowNo % 7 WHEN 6 THEN t.totalAmount ELSE NULL END) totalAmount5 ,
      MAX(CASE t.rowNo % 7 WHEN 6 THEN CONVERT(VARCHAR(50), t.RecordDate, 23) ELSE NULL END) recordDate5 ,
      MAX(CASE t.rowNo % 7 WHEN 6 THEN switchFlag ELSE NULL END) switchFlag5 ,
      MAX(CASE t.rowNo % 7 WHEN 0 THEN t.postAmount ELSE NULL END) postAmount6 ,
      MAX(CASE t.rowNo % 7 WHEN 0 THEN t.totalAmount ELSE NULL END) totalAmount6 ,
      MAX(CASE t.rowNo % 7 WHEN 0 THEN CONVERT(VARCHAR(50), t.RecordDate, 23) ELSE NULL END) recordDate6,
      MAX(CASE t.rowNo % 7 WHEN 0 THEN switchFlag ELSE NULL END) switchFlag6
      FROM
      (
      select * from (
      SELECT ROW_NUMBER() OVER ( PARTITION BY ys.reportId,num ORDER BY ys.reportId, recordDate ) rowNo ,re.reportNo,ys.*,COUNT(s.id) switchFlag
      FROM dbo.LNK_YJ_QT_NY(NOLOCK) ys
      INNER JOIN dbo.LNK_Qt_Report(NOLOCK) re ON ys.reportId = re.id
      INNER JOIN LNK_Estate Estate (NOLOCK) ON re.EstateId = Estate.EstateId AND Estate.DelFlg = 0
      LEFT JOIN OMS.dbo.CRM_Perform_Switch(NOLOCK) s ON s.delFlag=0 AND s.switchState = 17502 AND s.relateSystem = 17402
      AND switchYear=YEAR(ys.recordDate) AND switchMonth=MONTH(ys.recordDate)
      AND s.cityNo= #{cityNo,jdbcType=VARCHAR}
      WHERE ys.DelFlg = 0 AND Estate.CityNo = #{cityNo,jdbcType=VARCHAR}
      <if test="projectDepartmentId != null and projectDepartmentId != ''">
        AND Estate.projectDepartmentId = #{projectDepartmentId,jdbcType=VARCHAR}
      </if>
      <if test="estateNmKey != null and estateNmKey != ''">
        AND Estate.estateNm IN (${estateNmKey})
      </if>
      GROUP BY ys.id,ys.reportId,ys.num,re.reportNo,ys.postAmount,ys.totalAmount,ys.recordDate,ys.delFlg,ys.crtDt,ys.crtEmpId,ys.uptEmpId,ys.uptDt
      ) r where r.rowNo &lt; 8
      ) t
      GROUP bY t.reportId ,
      t.rowNo / 8,t.num,t.reportNo
      )tbl2

      SELECT
      ROW_NUMBER() OVER ( ORDER BY report.EstateId desc,reportDetail.reportNo desc, reportDetail.id asc,num desc ) rowNo ,
      reportDetail.id,
      report.EstateId ,
      report.EstateNm ,
      report.ReportNo ,
      report.id reportId,
      Estate.projectNo ,
      CAST(ROUND(reportDetail.dealAmount, 2) AS NUMERIC(20, 2)) dealAmount ,
      CONVERT(CHAR(10), reportDetail.businessDate, 120) AS dealDate ,
      reportDetail.tsnum AS num ,
      reportDetail.srType,
      q.postAmountTotal,
      q.totalAmountTotal,
      q.postAmount,
      q.totalAmount,
      q.recordDate,
      q.switchFlag,
      q.postAmount1,
      q.totalAmount1,
      q.recordDate1,
      q.switchFlag1,
      q.postAmount2,
      q.totalAmount2,
      q.recordDate2,
      q.switchFlag2,
      q.postAmount3,
      q.totalAmount3,
      q.recordDate3,
      q.switchFlag3,
      q.postAmount4,
      q.totalAmount4,
      q.recordDate4,
      q.switchFlag4,
      q.postAmount5,
      q.totalAmount5,
      q.recordDate5,
      q.switchFlag5,
      q.postAmount6,
      q.totalAmount6,
      q.recordDate6,
      q.switchFlag6,
      bdv.dicValue srName
      FROM    dbo.LNK_Qt_Report(NOLOCK) report
      INNER JOIN #reportDetail reportDetail ON report.ReportNo = reportDetail.ReportNo

      INNER JOIN LNK_Estate(NOLOCK) Estate ON report.EstateId = Estate.EstateId
      AND Estate.DelFlg = 0
      LEFT JOIN #q q ON q.ReportNo = report.ReportNo AND q.num=reportDetail.tsnum
      left join BAS_DictionaryValue(NOLOCK) bdv on reportDetail.srType = bdv.dicCode and bdv.delFlag = 'N'
      WHERE
      1 = 1
      AND report.DelFlg = 0
      AND Estate.CityNo = #{cityNo,jdbcType=VARCHAR}
      and  reportDetail.businessDate >=#{countDateStart} and reportDetail.businessDate &lt;=#{countDateEnd}
      <if test="projectDepartmentId != null and projectDepartmentId != ''">
        AND Estate.projectDepartmentId = #{projectDepartmentId,jdbcType=VARCHAR}
      </if>
      <if test="reportNo != null and reportNo != ''">
        <![CDATA[AND report.reportNo LIKE '%' + RTrim(LTrim('${reportNo}')) + '%']]>
      </if>
      <if test="projectNo != null and projectNo != ''">
        <![CDATA[AND Estate.projectNo  LIKE '%${projectNo}%']]>
      </if>
      <if test="estateNmKey != null and estateNmKey != ''">
        AND Estate.estateNm IN (${estateNmKey})
      </if>
      ORDER BY report.EstateId desc, reportDetail.reportNo desc, reportDetail.id asc,num desc

      drop table #reportDetail
      drop table #q
  </select>

  <update id="mergeInsertNy" parameterType="cn.com.eju.deal.otherReport.dto.LnkYjNyDto" >
    MERGE INTO dbo.LNK_YJ_QT_NY s1
    USING (SELECT #{reportId} AS reportId,#{num} AS num,#{recordDate} AS recordDate) AS s2
    ON s1.reportId=s2.reportId AND s1.num=s2.num AND s1.recordDate=s2.recordDate
    WHEN MATCHED THEN
    UPDATE SET s1.postAmount=#{postAmount},s1.totalAmount=#{totalAmount},s1.uptEmpId=#{uptEmpId},s1.uptDt=getdate(),s1.delFlg=0
    WHEN NOT MATCHED THEN
    INSERT (reportId,postAmount,totalAmount,recordDate,num,crtEmpId,crtDt,delFlg)
    VALUES(#{reportId},#{postAmount},#{totalAmount},#{recordDate},#{num},#{crtEmpId},getdate(),0);
  </update>

</mapper>