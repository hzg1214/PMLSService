package cn.com.eju.pmls.report.rptQTLnkDetail.Service;

import cn.com.eju.deal.base.helper.LogHelper;
import cn.com.eju.deal.base.support.SystemParam;
import cn.com.eju.deal.core.support.QueryConst;
import cn.com.eju.deal.core.support.ResultData;
import cn.com.eju.pmls.report.rptQTLnkDetail.dao.RptQTLnkDetailMapper;
import cn.com.eju.pmls.report.rptQTLnkDetail.model.RptQTLnkDetail;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.*;

@Service("rptQTLinkDetailService")
public class RptQTLinkDetailService {

    private final LogHelper logger = LogHelper.getLogger(this.getClass());

    @Autowired
    RptQTLnkDetailMapper rptQTLnkDetailMapper;

    public ResultData<List<RptQTLnkDetail>> queryList(Map<String, Object> queryParam) {

        ResultData<List<RptQTLnkDetail>> resultData = new ResultData<List<RptQTLnkDetail>>();
        List<RptQTLnkDetail> list = rptQTLnkDetailMapper.queryList(queryParam);
        resultData.setTotalCount((String) queryParam.get(QueryConst.TOTAL_COUNT));
        resultData.setReturnData(list);
        return resultData;
    }


    public ResultData<String> export(Map<String, Object> queryParam) {
        ResultData<String> resultData = new ResultData<String>();
        String uuId = UUID.randomUUID().toString().replaceAll("-", "");


        String yearly = "2020";
        if(queryParam.containsKey("organization")){
            yearly = (String)queryParam.get("organization");
        }
        List<String> accountProjectList = new ArrayList<>();
        if(queryParam.containsKey("accountProjectList")){
            accountProjectList= (List<String>)queryParam.get("accountProjectList");
        }
        List<String> regionCodeList = new ArrayList<>();
        if(queryParam.containsKey("regionCodeList")){
            regionCodeList= (List<String>)queryParam.get("regionCodeList");
        }
        List<String> areaCityCodeList = new ArrayList<>();
        if(queryParam.containsKey("areaCityCodeList")){
            areaCityCodeList= (List<String>)queryParam.get("areaCityCodeList");
        }
        List<String> cityIdList = new ArrayList<>();
        if(queryParam.containsKey("cityIdList")){
            cityIdList= (List<String>)queryParam.get("cityIdList");
        }
        List<String> centerIdList = new ArrayList<>();
        String project = "";
        if(queryParam.containsKey("project")){
            project = (String)queryParam.get("project");
        }
        String reportId = "";
        if(queryParam.containsKey("reportId")){
            reportId = (String)queryParam.get("reportId");
        }
        String dealDateStart = "";
        if(queryParam.containsKey("dealDateStart")){
                dealDateStart = (String)queryParam.get("dealDateStart");
        }
        String dealDateEnd = "";
        if(queryParam.containsKey("dealDateEnd")){
            dealDateEnd = (String)queryParam.get("dealDateEnd");
        }

        String webUrl = SystemParam.getWebConfigValue("exportWebUrl");
        String filePath = SystemParam.getWebConfigValue("rptQTLnkDetail_filePath");
        String fileName = "其他收入明细" + uuId + ".csv";

        StringBuffer sql = new StringBuffer();
        sql.append(" SELECT * FROM  CRM.dbo.V_RPT_QT_LNKDETAIL_TITLE ");
        sql.append(" UNION ALL SELECT CAST(ROW_NUMBER() OVER (ORDER BY A013 ASC) AS VARCHAR) AS  A001");
        sql.append(" ,A002,A003,A004,A005,A006,A007,A008,A009,A010,A011,A012,A013,A014,A015,A016,A017,A018,A019,A020,A021,A022,A023,A024,A025,A026,A027,A028,A029,A030");
        sql.append(" ,A031,A032,A033,A034,A035,A036,A037,A038,A039,A040,A041,A042,A043,A044,A045,A046,A047,A048,A049,A050,A051,A052,A053,A054,A055,A056,A057,A058,A059,A060");
        sql.append(" ,A061,A062,A063,A064,A065,A066,A067,A068,A069,A070,A071,A072,A073,A074,A075,A076,A077,A078,A079,A080,A081,A082,A083,A084,A085,A086,A087,A088,A089,A090");
        sql.append(" ,A091,A092,A093,A094,A095,A096,A097,A098,A099,A100,A101,A102,A103,A104,A105,A106,A107,A108,A109,A110,A111,A112,A113,A114,A115,A116,A117,A118,A119,A120");
        sql.append(" ,A121,A122,A123,A124,A125,A126,A127,A128,A129,A130,A131,A132,A133,A134,A135,A136,A137,A138,A139,A140,A141,A142,A143,A144,A145,A146,A147,A148,A149,A150");
        sql.append(" ,A151,A152,A153,A154,A155,A156,A157,A158,A159,A160,A161,A162,A163,A164,A165,A166,A167,A168,A169,A170,A171,A172,A173,A174,A175,A176,A177,A178,A179,A180");
        sql.append(" ,A181,A182,A183,A184,A185,A186,A187,A188,A189,A190,A191,A192,A193,A194,A195,A196,A197,A198,A199,A200,A201,A202,A203,A204,A205,A206,A207,A208,A209,A210");
        sql.append(" ,A211,A212,A213,A214,A215,A216,A217,A218,A219,A220,A221,A222,A223,A224,A225,A226,A227,A228,A229,A230,A231,A232,A233,A234,A235,A236,A237,A238,A239,A240");
        sql.append(" ,A241,A242,A243,A244,A245,A246,A247,A248,A249,A250,A251,A252,A253,A254,A255,A256,A257,A258,A259,A260,A261,A262,A263,A264,A265,A266,A267,A268,A269,A270");
        sql.append(" ,A271,A272,A273,A274,A275,A276,A277,A278,A279,A280,A281,A282,A283,A284,A285,A286,A287,A288,A289,A290,A291,A292,A293,A294,A295,A296,A297,A298,A299,A300");
        sql.append(" ,A301,A302,A303,A304,A305,A306,A307,A308,A309,A310,A311,A312,A313,A314,A315,A316,A317,A318,A319,A320,A321,A322,A323,A324,A325,A326,A327,A328,A329,A330");
        sql.append(" ,A331,A332,A333,A334,A335,A336,A337,A338,A339,A340,A341,A342,A343,A344,A345,A346,A347,A348,A349,A350 ");
        sql.append(" FROM CRM.dbo.V_RPT_QT_LNKDETAIL_DATA  ");
        sql.append(" WHERE A361 = '" + TransactSQLInjection(yearly) + "'");

        if (accountProjectList != null && accountProjectList.size() > 0) {
            sql.append(" AND A003 IN(");
            String accountProjectListStr = "";
            for (String item : accountProjectList) {
                accountProjectListStr += ",'" + TransactSQLInjection(item) + "'";
            }
            sql.append(accountProjectListStr.substring(1));
            sql.append(" )");
        }
        if (regionCodeList != null && regionCodeList.size() > 0) {

            sql.append(" AND A351 IN(");
            String regionCodeListStr = "";
            for (String item : regionCodeList) {
                regionCodeListStr += ",'" + TransactSQLInjection(item) + "'";
            }
            sql.append(regionCodeListStr.substring(1));
            sql.append(" )");
        }
        if (areaCityCodeList != null && areaCityCodeList.size() > 0) {
            sql.append(" AND A353 IN(");
            String areaCityCodeListStr = "";
            for (String item : areaCityCodeList) {
                areaCityCodeListStr += ",'" + TransactSQLInjection(item) + "'";
            }
            sql.append(areaCityCodeListStr.substring(1));
            sql.append(" )");
        }
        if (cityIdList != null && cityIdList.size() > 0) {

            sql.append(" AND A357 IN(");
            String cityIdListStr = "";
            for (String item : cityIdList) {
                cityIdListStr += ",'" + TransactSQLInjection(item) + "'";
            }
            sql.append(cityIdListStr.substring(1));
            sql.append(" )");
        }
        if (centerIdList != null && centerIdList.size() > 0) {
            sql.append(" AND A358 IN(");
            String centerIdListStr = "";
            for (String item : centerIdList) {
                centerIdListStr += ",'" + TransactSQLInjection(item) + "'";
            }
            sql.append(centerIdListStr.substring(1));
            sql.append(" )");
        }

        if (project != null && project != "") {
            sql.append(" AND A014 LIKE  CONCAT('%', '" + TransactSQLInjection(project) + "','%') ");
        }
        if (reportId != null && reportId != "") {
            sql.append(" AND A013 LIKE  CONCAT('%', '" + TransactSQLInjection(reportId) + "','%') ");
        }
        if (dealDateStart != null && dealDateStart != "") {
            sql.append(" AND Convert(varchar(10),A017,120) >= '" + TransactSQLInjection(dealDateStart) + "' ");
        }
        if (dealDateEnd != null && dealDateEnd != "") {
            sql.append(" AND Convert(varchar(10),A017,120) <= '" + TransactSQLInjection(dealDateEnd) + "' ");
        }

        logger.info("sql结果:", sql.toString());


        Map<String, Object> imparm = new HashMap<>();
        imparm.put("sqlstr", sql.toString());
        imparm.put("filePathName", filePath + "//" + fileName);
        rptQTLnkDetailMapper.export(imparm);


        resultData.setReturnData(webUrl + "/" + fileName);

        return resultData;
    }

    public static String TransactSQLInjection(String str) {
        return str.replaceAll(".*([';]+|(--)+).*", "");
    }
}