<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.eju.pmls.skStatement.dao.PmlsSkAllocateMatMapper" >
  <resultMap id="BaseResultMap" type="cn.com.eju.pmls.skStatement.model.PmlsSkAllocateMat" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="skSerialNo" property="skSerialNo" jdbcType="VARCHAR" />
    <result column="serialNo" property="serialNo" jdbcType="VARCHAR" />
    <result column="recordDate" property="recordDate" jdbcType="TIMESTAMP" />
    <result column="amount_bef" property="amount_bef" jdbcType="DECIMAL" />
    <result column="amount_aft" property="amount_aft" jdbcType="DECIMAL" />
    <result column="delFlag" property="delFlag" jdbcType="BIT" />
    <result column="dateCreate" property="dateCreate" jdbcType="TIMESTAMP" />
    <result column="userIdCreate" property="userIdCreate" jdbcType="INTEGER" />
    <result column="dateUpdate" property="dateUpdate" jdbcType="TIMESTAMP" />
    <result column="userIdUpdate" property="userIdUpdate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, skSerialNo, serialNo, recordDate, amount_bef, amount_aft, delFlag, dateCreate,
    userIdCreate, dateUpdate, userIdUpdate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from PMLS_SkAllocate_mat
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from PMLS_SkAllocate_mat
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.eju.pmls.skStatement.model.PmlsSkAllocateMat" useGeneratedKeys="true" keyProperty="id">
    insert into PMLS_SkAllocate_mat (skSerialNo, serialNo,
    recordDate, amount_bef, amount_aft,
    delFlag, dateCreate, userIdCreate, userIdUpdate, dateUpdate)
    values (#{skSerialNo,jdbcType=VARCHAR}, #{serialNo,jdbcType=VARCHAR},
    #{recordDate,jdbcType=TIMESTAMP}, #{amount_bef,jdbcType=DECIMAL}, #{amount_aft,jdbcType=DECIMAL},
    0, getdate(), #{userIdCreate,jdbcType=INTEGER},#{userIdUpdate,jdbcType=INTEGER},#{dateUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.eju.pmls.skStatement.model.PmlsSkAllocateMat" >
    insert into PMLS_SkAllocate_mat
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="skSerialNo != null" >
        skSerialNo,
      </if>
      <if test="serialNo != null" >
        serialNo,
      </if>
      <if test="recordDate != null" >
        recordDate,
      </if>
      <if test="amount_bef != null" >
        amount_bef,
      </if>
      <if test="amount_aft != null" >
        amount_aft,
      </if>
      <if test="delFlag != null" >
        delFlag,
      </if>
      <if test="dateCreate != null" >
        dateCreate,
      </if>
      <if test="userIdCreate != null" >
        userIdCreate,
      </if>
      <if test="dateUpdate != null" >
        dateUpdate,
      </if>
      <if test="userIdUpdate != null" >
        userIdUpdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="skSerialNo != null" >
        #{skSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="recordDate != null" >
        #{recordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount_bef != null" >
        #{amount_bef,jdbcType=DECIMAL},
      </if>
      <if test="amount_aft != null" >
        #{amount_aft,jdbcType=DECIMAL},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="dateCreate != null" >
        #{dateCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="userIdCreate != null" >
        #{userIdCreate,jdbcType=INTEGER},
      </if>
      <if test="dateUpdate != null" >
        #{dateUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userIdUpdate != null" >
        #{userIdUpdate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.eju.pmls.skStatement.model.PmlsSkAllocateMat" >
    update PMLS_SkAllocate_mat
    <set >
      <if test="skSerialNo != null" >
        skSerialNo = #{skSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        serialNo = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="recordDate != null" >
        recordDate = #{recordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount_bef != null" >
        amount_bef = #{amount_bef,jdbcType=DECIMAL},
      </if>
      <if test="amount_aft != null" >
        amount_aft = #{amount_aft,jdbcType=DECIMAL},
      </if>
      <if test="delFlag != null" >
        delFlag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="dateCreate != null" >
        dateCreate = #{dateCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="userIdCreate != null" >
        userIdCreate = #{userIdCreate,jdbcType=INTEGER},
      </if>
      <if test="dateUpdate != null" >
        dateUpdate = #{dateUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userIdUpdate != null" >
        userIdUpdate = #{userIdUpdate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.eju.pmls.skStatement.model.PmlsSkAllocateMat" >
    update PMLS_SkAllocate_mat
    set skSerialNo = #{skSerialNo,jdbcType=VARCHAR},
      serialNo = #{serialNo,jdbcType=VARCHAR},
      recordDate = #{recordDate,jdbcType=TIMESTAMP},
      amount_bef = #{amount_bef,jdbcType=DECIMAL},
      amount_aft = #{amount_aft,jdbcType=DECIMAL},
      delFlag = #{delFlag,jdbcType=BIT},
      dateCreate = #{dateCreate,jdbcType=TIMESTAMP},
      userIdCreate = #{userIdCreate,jdbcType=INTEGER},
      dateUpdate = #{dateUpdate,jdbcType=TIMESTAMP},
      userIdUpdate = #{userIdUpdate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getSkAllocateListBySkSerialNo" parameterType="Map" resultType="cn.com.eju.pmls.skStatement.dto.PmlsSkAllocateMatDto">
  SELECT mat.id
         ,mat.skSerialNo
         ,mat.serialNo
         ,mat.amount_bef
         ,mat.amount_aft
         ,mat.dateCreate
         ,mat.userIdCreate
		 ,u1.userName userNameCreate
         ,mat.dateUpdate
         ,mat.userIdUpdate
		 ,u2.userName userNameUpdate
  FROM dbo.PMLS_SkAllocate_mat (NOLOCK) mat
  LEFT JOIN dbo.USR_User u1 (NOLOCK) ON u1.userId = mat.userIdCreate
  LEFT JOIN dbo.USR_User u2 (NOLOCK) ON u2.userId = mat.userIdUpdate
  WHERE mat.delFlag = 0
    AND skSerialNo = #{skSerialNo,jdbcType=VARCHAR}
  order by mat.id desc
  </select>

  <update id="deleteById" parameterType="java.lang.Integer">
    UPDATE PMLS_SkAllocate_mat
       SET delFlag = 1
          ,dateUpdate = GETDATE()
     WHERE id = #{id,jdbcType=INTEGER}
       AND delFlag = 0
  </update>

  <select id="getMaxSerialNo" resultType="java.lang.String" parameterType="Map"  useCache="false">
    SELECT MAX(serialNo) FROM dbo.PMLS_SkAllocate_mat (NOLOCK) WHERE skSerialNo = #{skSerialNo,jdbcType=VARCHAR}
  </select>
</mapper>