package cn.com.eju.deal.houseLinkage.linkZjcbDetail.service;

import cn.com.eju.deal.base.service.BaseService;
import cn.com.eju.deal.core.support.ResultData;
import cn.com.eju.deal.dto.houseLinkage.linkDetail.LinkDetailDto;
import cn.com.eju.deal.dto.houseLinkage.linkZjcbDetail.LinkZjcbDetailDto;
import cn.com.eju.deal.houseLinkage.linkZjcbDetail.dao.LinkZjcbDetailMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * desc:联动明细(资金成本)
 *
 * @author :zhenggang.Huang
 * @date :2019年7月18日
 */
@Service("linkZjcbDetailService")
public class LinkZjcbDetailService extends BaseService<LinkDetailDto> {

    @Autowired
    private LinkZjcbDetailMapper linkZjcbDetailMapper;

    /**
     * desc:查询list
     * 2019年7月22日
     * author:zhenggang.Huang
     */
    public ResultData queryLinkZjcbDetailList(Map<String, Object> param) throws Exception {
        //构建返回
        ResultData resultData = new ResultData();
        //查询
        int pageIndex = 1;
        int pageSize = 10;
        int curPage = 1;
        if (param.get("pageIndex") != null)
            pageIndex = Integer.parseInt(param.get("pageIndex").toString());
        if (param.get("pageSize") != null)
            pageSize = Integer.parseInt(param.get("pageSize").toString());
        if (param.get("curPage") != null)
            curPage = Integer.parseInt(param.get("curPage").toString());
        param.remove("pageIndex");
        param.remove("pageSize");
        param.remove("curPage");
//        Map<String,Object> paramMap = new HashMap<>();
//        paramMap.put("userId", param.get("userId"));
//        
//        param.put("offsetRowLine", (pageIndex - 1) * pageSize);
//        
//        List<String> cityIdAuthList =linkZjcbDetailMapper.getCrmUserAuthCity(paramMap) ;
//        List<String> centerGroupIdAuthList =linkZjcbDetailMapper.getCrmUserAuthCenterGroup(paramMap) ;
//        param.put("cityIdAuthList", cityIdAuthList);
//        param.put("centerGroupIdAuthList", centerGroupIdAuthList);

//start modify by huangmc 20191018 . 修改为存储过程模式
        //List<LinkZjcbDetailDto> moList = linkZjcbDetailMapper.selLinkZjcbDetailList(param);
        Map<String, Object> excParam = new HashMap<>();
        excParam.put("organization", param.containsKey("organization") ? param.get("organization").toString() : "");
        excParam.put("regionCodeList",param.containsKey("regionCodeStr")?param.get("regionCodeStr").toString():"");
        excParam.put("areaCityCodeList",param.containsKey("areaCityCodeStr")?param.get("areaCityCodeStr").toString():"");
        excParam.put("cityIdList",param.containsKey("cityIdStr")?param.get("cityIdStr").toString():"");
        excParam.put("centerIdList",param.containsKey("centerIdStr")?param.get("centerIdStr").toString():"");
        excParam.put("estateNm",param.containsKey("estateNm")?param.get("estateNm").toString():"");
        excParam.put("reportId",param.containsKey("reportId")?param.get("reportId").toString():"");
        excParam.put("dateStage",param.containsKey("dateStage")?param.get("dateStage").toString():"");
        excParam.put("userId",param.containsKey("userId")?param.get("userId").toString():"");

        List<LinkZjcbDetailDto> moList = linkZjcbDetailMapper.execLinkZjcbDetailTable(excParam);
//end modify by huangmc 20191018 . 修改为存储过程模式
        // 转换
        resultData.setTotalCount("0");
        if (null != moList && !moList.isEmpty()) {
            resultData.setTotalCount(moList.size() + "");
            int endRow = pageIndex * pageSize;
            int startCount =(pageIndex - 1) * pageSize;
            int endCount = endRow > moList.size() ? moList.size() : endRow;
            if(endCount > startCount) {
            	
            	moList = moList.subList(startCount, endCount);
            }
            param.put("pageIndex", pageIndex);
            param.put("pageSize", pageSize);
            param.put("curPage", curPage);
            resultData.setReturnData(moList);
            resultData.setSuccess();
        }
        return resultData;

    }

}
