package cn.com.eju.pmls.jsStatement.service;

import cn.com.eju.deal.base.helper.LogHelper;
import cn.com.eju.deal.core.support.QueryConst;
import cn.com.eju.deal.core.support.ResultData;
import cn.com.eju.pmls.jsStatement.dao.PmlsJsStatementMapper;
import cn.com.eju.pmls.jsStatement.dao.PmlsStatementCashBillRelateMapper;
import cn.com.eju.pmls.jsStatement.dto.PmlsJsStatementDto;
import cn.com.eju.pmls.jsStatement.model.PmlsJsStatement;
import cn.com.eju.pmls.jsStatement.model.PmlsStatementCashBillRelate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

@Service("jsStatementService")
public class JsStatementService {

    private final LogHelper logger = LogHelper.getLogger(this.getClass());

    @Autowired
    PmlsJsStatementMapper pmlsJsStatementMapper;

    @Autowired
    PmlsStatementCashBillRelateMapper pmlsStatementCashBillRelateMapper;

    /**
     * 查询
     */
    public ResultData<List<PmlsJsStatementDto>> queryList(Map<String, Object> queryParam) {
        ResultData<List<PmlsJsStatementDto>> resultData = new ResultData<List<PmlsJsStatementDto>>();
        List<PmlsJsStatementDto> list = pmlsJsStatementMapper.queryList(queryParam);
        resultData.setTotalCount((String) queryParam.get(QueryConst.TOTAL_COUNT));
        resultData.setReturnData(list);
        return resultData;
    }

    /**
     * 作废
     */
    public ResultData toInvalid(PmlsJsStatement statement) throws Exception {
        ResultData resultData = new ResultData();
        Integer id = statement.getId();
        PmlsJsStatement record = pmlsJsStatementMapper.selectByPrimaryKey(id);
        // 10401:草稿的场合 or 10404:审核不通过的场合 可以修改为作废
        if ("10401".equals(record.getApproveStatus()) || "10404".equals(record.getApproveStatus())) {
            pmlsJsStatementMapper.updateByPrimaryKeySelective(statement);
        } else {
            resultData.setReturnCode("201");
            resultData.setReturnMsg("本结算单当前状态已变更！");
        }
        return resultData;
    }

    /**
     * 终止
     */
    public ResultData toTermination(PmlsJsStatement statement) throws Exception {
        ResultData resultData = new ResultData();
        Integer id = statement.getId();
        PmlsJsStatement record = pmlsJsStatementMapper.selectByPrimaryKey(id);
        // 10403: 审核通过 且 结算书没有被请款过 才可以修改为终止
        if ("10403".equals(record.getApproveStatus())) {
            PmlsStatementCashBillRelate relate = pmlsStatementCashBillRelateMapper.getTopByStatementId(id);
            if (relate == null) {
                pmlsJsStatementMapper.updateByPrimaryKeySelective(statement);
            } else {
                resultData.setReturnCode("202");
                resultData.setReturnMsg("本结算单已请款！");
            }
        } else {
            resultData.setReturnCode("201");
            resultData.setReturnMsg("本结算单当前状态已变更！");
        }
        return resultData;
    }


    public ResultData<List<PmlsJsStatementDto>> queryJsCompanyList(Map<String, Object> queryParam) {

        return null;
    }

    public ResultData<List<PmlsJsStatementDto>> queryJsProjectList(Map<String, Object> queryParam) {

        return null;
    }

    public ResultData<List<PmlsJsStatementDto>> queryJsHSCodeList(Map<String, Object> queryParam) {

        return null;
    }

    public ResultData<List<PmlsJsStatementDto>> queryJsKHCodeList(Map<String, Object> queryParam) {

        return null;
    }

    public ResultData<List<PmlsJsStatementDto>> queryJsFrameOaList(Map<String, Object> queryParam) {

        return null;
    }

    public ResultData<List<PmlsJsStatementDto>> queryJsNormalReportList(Map<String, Object> queryParam) {

        return null;
    }

    public ResultData<List<PmlsJsStatementDto>> queryJsOffsetReportList(Map<String, Object> queryParam) {

        return null;
    }
}
